name: Docker Image and PyPI CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Run the Unittests. If they pass:build the Docker image and push to PyPI. If tests fail display error message.
      run: |
         export PYTHONPATH=`pwd`/code:`pwd`/tests
         echo $PYTHONPATH
         python3 -m venv unittestenv
         source unittestenv/bin/activate
         pip install -U pip nose2
         cd tests
         nose2 -v
         if [[ $? -eq 0 ]]; then
           echo "Unit tests passed. Release to PyPI and Docker."
           pip install patternlib
           onlineversion=`pip list | grep patternlib | cut -d ' ' -f2`
           infileversion=`cat code/patternlib/__init__.py  |  grep 'VERSION =' | sed -e "s/VERSION = //" -e 's/"//g'`
           if [ "$onlineversion" != "$infileversion" ]; then
             deactivate
             cd ..
             /bin/rm -rf unittestenv
             bash build_docker.sh
             docker login --username gautamkhanapuri --password $DOCKER
             ver=`cat code/patternlib/__init__.py  |  grep 'VERSION =' | sed -e "s/VERSION = //" -e 's/"//g'`
             docker push gautamkhanapuri/patternlib:${ver}
             python3 -m venv pypienv
             source pypienv/bin/activate
             ver=`cat code/patternlib/__init__.py  |  grep 'VERSION =' | sed -e "s/VERSION = //" -e 's/"//g'`
             pip install -U pip setuptools wheel twine
             python3 setup.py bdist_wheel sdist
             twine upload dist/* -u $PYPIUSER -p $PYPIPSWD
             deactivate 
             /bin/rm -rf build dist pypienv code/patternlib.egg-info code/__pycache__
           else
             echo "PyPI and Docker Image are already up to date"
           fi
           exit 0
         else
           echo "Unit tests failed. Fix and rerun the pipeline."
           deactivate
           cd ..
           /bin/rm -rf unittestenv
           exit1
         fi

      env:
         DOCKER: ${{ secrets.DOCKERKEY }}
         PYPIUSER: ${{ secrets.PYPIUSER }}
         PYPIPSWD: ${{ secrets.PYPIPSWD }}
